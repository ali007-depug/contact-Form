@use "./util/" as *;
@use "./global/" as *;

#root {
  @include breakpoint(sm) {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }
}
form {
  margin-top: rem(20);
  margin-inline: rem(15);
  padding-inline: rem(15);
  padding-block: rem(10);
  border-radius: rem(15);
  background-color: $white;
  width: min(90%, 750px);

  @include breakpoint(sm) {
    padding-inline: rem(30);
  }
}

// 'contact us'
.form__title {
  font-weight: $f-bold;
  margin-block-end: rem(30);
  color: $greyDark;
}

// First Name + last Name Wrapper
.form__fullName {
  @include breakpoint(sm) {
    display: flex;
    gap: rem(20);
  }
}
// input wrapper for [firstName.lastName & email]
.inputWrapper {
  flex-grow: 1;
}

.form__queryType {
  @include breakpoint(sm) {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    justify-content: space-between;

    label {
      &[for="queryType"] {
        margin-block: rem(15);
      }

      &[for="supportRequest"],
      &[for="genralEnquiry"] {
        cursor: pointer;

        @include flex((rem(5)), center);
        @include breakpoint(sm) {
          width: 45%;
          margin-inline: 0;
          padding-inline: rem(10);
          input {
            width: 25%;
          }
        }

        border: 1px solid $greyMid;
        border-radius: rem(8);
        margin-block: rem(10);
        padding-inline-start: rem(20);
        input {
          display: none;
          &:checked + .radio__icon {
            background-image: url("./assets/images/icon-radio-selected.svg");
            border: none;
          }
        }
        &.greenBorder {
          background-color: $p-greenLight;
        }
      }
    }
    .radio__icon {
      display: block;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      border: 1px solid $p-greenMid;
      margin-inline-end: rem(10);
      margin-block: rem(15);
    }
  }
}

input {
  width: 100%;
  height: 45px;
  border-radius: rem(8);
  border: 1px solid $greyMid;
  outline: 0px;
  padding-inline-start: rem(8);
  margin-block: 10px;
  cursor: pointer;
  &:focus {
    border: 2px solid $p-greenMid;
  }

  &[type="text"],
  &[type="email"] {
    // change the border  to red for the input
    &.error {
      border-color: $p-red;
    }
  }
}
// add star to all label
label {
  text-transform: capitalize;
  display: block;
  width: 100%;
  color: $greyDark;

  // expect the radio && checkbox with thier label
  &:not(
      [for="genralEnquiry"],
      [for="supportRequest"],
      [for="checkbox"]
    )::after {
    content: "*";
    color: $p-greenMid;
    font-size: rem(14);
    margin-inline-start: rem(10);
  }

  &[for="checkbox"] {
    text-transform: lowercase;
  }

  // custom style for radio and their label
}
textarea {
  width: 100%;
  // height: 45px;
  margin-block-start: rem(10);
  padding-inline: rem(5);
  padding-block: rem(5);
  outline: none;
  cursor: pointer;
  border-radius: rem(5);
  border: 1px solid $greyMid;
  &:focus {
    border: 1px solid $p-greenMid;
  }

  &.error {
    border-color: $p-red;
  }
}

.form__checkbox {
  margin-block: rem(10);
  label {
    @include flex((rem(10)), center);
    cursor: pointer;
  }
  input[type="checkbox"] {
    margin-inline-end: rem(10);
    display: none;
    &:checked + .checkbox__icon {
      background-image: url("./assets/images/icon-checkbox-check.svg");
      background-position: center;
      background-size: contain;
    }
  }
  .checkbox__icon {
    display: block;
    width: 15px;
    height: 15px;
    border-radius: rem(5);
    border: 1px solid $p-greenMid;
  }
}

// submit btn
button {
  background-color: $p-greenMid;
  color: $white;
  width: 100%;
  padding-block: rem(20);
  border-radius: rem(8);
  font-weight: $f-bolder;
  border: none;
  cursor: pointer;
}

// the <p> that hold the error state
.errorMsg {
  color: $p-red;
  margin-block-end: rem(10);
}

.hidden {
  display: none;
}

// style the success state
.successState {
  background-color: $greyDark;
  padding: rem(10);
  border-radius: rem(10);
  font-size: rem(15);
  margin-block-start: rem(15);
  .message {
    @include flex(rem(10));
    margin-block-end: rem(10);
    color: $white;
    font-weight: $f-bold;
  }

  .messageDetails {
    color: $greyMid;
  }
}


// @use "../abstract/" as *;
.attribution {
  display: flex;
  font-size: 11px;
  position: fixed;
  background: hsl(0, 29%, 12.2%);
  border-radius: 5px;
  width: 35%;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  line-height: 1.8;
  top: 10%;
  left: -45%;
  color: hsl(36.7, 84.1%, 49.2%);
  box-shadow: 0px 0px 5px #b74426;
  transition: all 0.3s ease-in-out;
  cursor: pointer;

  a {
    color: hsl(28.6, 44.7%, 72.4%);
    text-decoration-line: underline;
  }

  // show attribution as animation for mobile & tablet
  @include breakpoint-down(lg) {
    animation: moveToLeft 10s ease-in-out 4 alternate;
  }

  // show attribution by hover on it
  @include breakpoint(lg) {
    width: 18%;
    left: -15%;
    &:hover {
      left: 0;
    }
  }
}

@keyframes moveToLeft {
  from {
    // transform: translateX(-300px);
    left: -45%;
  }
  to {
    // transform: translateX(0);
    left: 0;
  }
}
